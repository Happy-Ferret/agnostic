/****************************************
 * This file is part of UNIX Guide for the Perplexed project.
 * Copyright (C) 2014 by Assaf Gordon <assafgordon@gmail.com>
 * Released under GPLv3 or later.
 ****************************************/

/* POSIX Shell parser + descriptoer unit tests.
 *
 * This test parse each shell-command in the 'tests' array,
 * Then call "DescribeShellCommand" to convert the command back to string.
 *
 * The goal is to verify that every JSON structure generated by the parser
 * can be handled by the Shell-Descriptor (which is the reference implementation
 * of handling the parse-tree).
 */
"use strict";

var count_pass = 0 ;
var count_fail = 0 ;

var ob_utils = require('utils/object_utils');
var load_shell_parser = require('utils/shell_parser_loader');
var describeShellCommand = require('shell/shell_descriptor');

/* Load the tests. This creates two global variables: 'tests' and 'rules' */
var shell_syntax_tests = require('./shell_syntax_tests.js');
var tests = shell_syntax_tests.tests;

var parser = load_shell_parser();

for (var t in tests)
{
	var name  = tests[t][0];
	var input = tests[t][1];
	var should_be_accepted = tests[t][2];
	var start_rule = tests[t][3];

	/* Only tests valid shell commands */
	if (!should_be_accepted)
		continue;

	try {
		var parse_tree = parser.parse(input);
		var desc = describeShellCommand(parse_tree);

		console.log(name + " OK");
		count_pass++;
	} catch(err) {
		count_fail++;
		console.log(name + " FAIL: " + err);
	}
}
console.log ("--Shell-Descriptor Tests Summary--");
console.log ("pass: " + count_pass);
console.log ("fail: " + count_fail);

process.exit( count_fail>0 ) ;
