/*
   This file is part of UNIX Guide for the Perplexed project.
   Copyright (C) 2014 by Assaf Gordon <assafgordon@gmail.com>
   Released under GPLv3 or later, with the following addition:

     As additional permission under GNU GPL version 3 section 7, you
     may distribute non-source (e.g., minimized or compacted) forms of
     that code without the copy of the GNU GPL normally required by
     section 4, provided you include this license notice and a URL
     through which recipients can access the Corresponding Source.

   See: https://www.gnu.org/philosophy/javascript-trap.html

   POSIX Shell Command Language Standard:
   http://pubs.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html
*/

/*
A Naive implementation of printf(1)

TODO:
The emulation of PRINTF is severely limited,
as "printf" requires "\n" to geenrate a newline,
but the entire Agnostic Emulation is always lined based.
Fix this.
*/
"use strict";

var sprintf = require('utils/sprintf');
var str_utils = require('utils/string_utils');
var ProgramBase = require('programs/program_base');

module.exports = ProgramPrintf;

function ProgramPrintf() {
	this.name = "ProgramPrintf";
	this.program_name = "printf";
}
ProgramPrintf.prototype = new ProgramBase();
ProgramPrintf.prototype.constructor = ProgramPrintf;

ProgramPrintf.prototype.internal_run=function() {
	if (this.argv.length===0)
		this.error_invalid_argument("missing operand");

	var input_args = this.argv;

	var output_text = "" ;
	var format_string = this.argv.shift();

	//Based on the given format string, how many arguments are expected?
	var expected_args = sprintf.sprintf_format_get_default_values(format_string);
	if (expected_args.length === 0) {
		output_text = sprintf.sprintf(format_string);
	} else {
		//repeat the format string for as many arguments as given,
		//e.g.:
		//   $ env printf "%s: %d\n" a 1 b 2 c 3 d
		//   a: 1
		//   b: 2
		//   c: 3
		//   d: 0
		//should repeat the format string 4 times,
		//and the last time the input arguments are only 'd', missing one item - which
		//should be added with the default value of zero (default for '%d').
		do {
			var temp_args = input_args.splice(0, expected_args.length);
			if (temp_args.length < expected_args.length) {
				// need to add missing arguments with default values
				var default_values = expected_args.slice(temp_args.length);
				temp_args = temp_args.concat(default_values);
			}
			var result = sprintf.vsprintf(format_string,temp_args);
			output_text += result ;
		} while (input_args.length>0);
	}
	output_text = str_utils.unbackslash(output_text);
	//Remove last newline if any, to avoid an empty line
	output_text = output_text.replace(/\n$/,"");
	this.runtime.stdout.put_lines(output_text.split("\n"));
	return 0;
}
