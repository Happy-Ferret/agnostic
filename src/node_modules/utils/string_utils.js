/*
   This file is part of UNIX Guide for the Perplexed project.
   Copyright (C) 2014 by Assaf Gordon <assafgordon@gmail.com>
   Released under GPLv3 or later, with the following addition:

     As additional permission under GNU GPL version 3 section 7, you
     may distribute non-source (e.g., minimized or compacted) forms of
     that code without the copy of the GNU GPL normally required by
     section 4, provided you include this license notice and a URL
     through which recipients can access the Corresponding Source.

   See: https://www.gnu.org/philosophy/javascript-trap.html
*/
"use strict";

/*
String-related Helper Functions


TODO:
1. Replace with UnderscoreJS ?

*/

module.exports = new string_utils(); //NOTE: a singleton, not a class

function string_utils()
{
/*
implementation of 'startsWith' and 'endsWith' from here:
http://stackoverflow.com/questions/646628/how-to-check-if-a-string-startswith-another-string
*/

	this.startsWith = function(str,prefix)
	{
		if (prefix.length===0) return true;
	        return str.slice(0, prefix.length) == prefix;
	}

	this.endsWith = function(str,suffix)
	{
	        if (suffix.length===0) return true;
		return str.slice(-suffix.length) == suffix;
	}

	this.trimWhitespace = function(str)
	{
		var tmp = str.replace(/[ \t]+$/,"");
		tmp = tmp.replace(/^[ \t]+/,"");
		return tmp;
	}

/*
Shell-Quoting related functions

   POSIX Shell Command Language Standard:
   http://pubs.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html
*/


/*
Performs Field-Splitting on a string, respecting shell-quoting rules.

See Section "2.6 Word Expansions", Item 2,
and Section "2.6.5 Field Splitting".

NOTES:
1. IFS is always assumed to be SPACE+TAB+NEWLINE
2. Quotes (single/double) are NOT REMOVED
   (per the standard, quotes removal is always last)
3. Dollar sign has NO special meaning
   (it is assume. per the standard, the parameter/subshell/arithmetic/etc. expansion already occured)
*/
this.splitShellquotes = function(text) {

	/* Trim leading/trailing whitepace */
	text = text.replace(/[ \t\n]+$/,"");
	text = text.replace(/^[ \t\n]+/,"");
	var fields = [];

	var chars = text.split("");
	var current = "" ;
	var in_quotes = null;
	while ( chars.length>0 ) {
		var ch = chars.shift();
		switch (ch)
		{
		case ' ':
		case '\t':
		case '\n':
			if (in_quotes === null) {
				// Terminate current field, start a new one
				if (current !== "")
					fields.push(current);
				current = "";
				continue;
			}
			break;

		case '"':
			if (in_quotes === null) {
				//Start Double quote
				in_quotes = '"';
			} else if (in_quotes === '"') {
				//End double quotes
				in_quotes = null;
			} else {
				// single-quotes inside double quotes - no special action.
			}
			break;

		case "'":
			if (in_quotes === null) {
				//Start Single quote
				in_quotes = "'";
			} else if (in_quotes === "'") {
				//End Single quotes
				in_quotes = null;
			} else {
				// Double-quotes inside double quotes - no special action.
			}
			break;

		case '\\':
			// Back-slash
			// TODO: handle backslash+double-quotes inside double-quotes.
			break;
		}

		// Add character to the current field
		current += ch ;
	}
	if (current !== "")
		fields.push(current);

	if (in_quotes !== null)
		throw new Error("ShellQuotesSplit: unbalanced quotes in string (" + text + ")");

	return fields;
}


/*
Remove Quotes from a string, according to section "2.6.7 Quote Removal":
      "The quote characters: '\', '", and '' (backslash, single-quote,
       double-quote) that were present in the original word shall be removed
       unless they have themselves been quoted."
*/
this.removeShellquotes = function(text) {
	var result = "" ;
	var chars = text.split("");
	var in_quotes = null;
	while ( chars.length>0 ) {
		var ch = chars.shift();

		if ( ch === "'" || ch === '"' ) {
			if (in_quotes === null) {
				// Start new quotes
				in_quotes = ch;
				continue ;
			} else if (in_quotes === ch) {
				// End quotes
				in_quotes = null ;
				continue ;
			} else {
				//Quoted-quotes, add as valid caharacter
			}
		}

		// TODO: handle backslash

		// Add character to the current field
		result += ch ;
	}

	if (in_quotes !== null)
		throw new Error("ShellQuotesSplit: unbalanced quotes in string (" + text + ")");
	return result;
}


}
